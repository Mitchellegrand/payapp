tool_use_id=toolu_vrtx_01MWei3SsemH2hQXrvzFgtDJ
tool_name=replace_code
input={"target_code_block_id": "payCalculatorCustom2", "old_str": "    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            // Constants from the Excel sheet\n            const WEEKDAY_RATE = 12.84;\n            const WEEKEND_RATE = 15.41;\n            const WEEKEND_DAYS = ['SATURDAY', 'SUNDAY'];\n            \n            // Get all input elements\n            const hourInputs = document.querySelectorAll('input[type=\"number\"]');\n            const holidayCheckboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n            \n            // Calculate pay for a specific day\n            function calculateDayPay(hours, isHoliday, day) {\n                if (!hours || hours <= 0) return { hoursPaid: 0, pay: 0 };\n                \n                // Calculate hours paid (subtract 0.5 for shifts > 5 hours)\n                const hoursPaid = hours > 5 ? hours - 0.5 : hours;\n                \n                // Determine base rate based on day\n                const rate = WEEKEND_DAYS.includes(day) ? WEEKEND_RATE : WEEKDAY_RATE;\n                \n                // Calculate pay (double rate for holidays)\n                const pay = isHoliday ? hoursPaid * rate * 2 : hoursPaid * rate;\n                \n                return {\n                    hoursPaid,\n                    pay\n                };\n            }\n            \n            // Calculate all pay values\n            function calculatePay() {\n                console.log(\"Calculating pay...\");\n                \n                let totalHours = 0;\n                let totalHoursPaid = 0;\n                let totalPay = 0;\n                let totalShifts = 0;\n                \n                // Loop through all hour inputs\n                hourInputs.forEach(input => {\n                    const day = input.dataset.day;\n                    const week = input.dataset.week;\n                    const hours = parseFloat(input.value) || 0;\n                    \n                    if (hours > 0) {\n                        totalShifts++;\n                        totalHours += hours;\n                    }\n                    \n                    // Find corresponding holiday checkbox\n                    const holidayCheckbox = document.querySelector(`input[data-holiday=\"${day}\"][data-week=\"${week}\"]`);\n                    const isHoliday = holidayCheckbox ? holidayCheckbox.checked : false;\n                    \n                    // Calculate pay for this day\n                    const dayResult = calculateDayPay(hours, isHoliday, day);\n                    \n                    if (hours > 0) {\n                        totalHoursPaid += dayResult.hoursPaid;\n                    }\n                    totalPay += dayResult.pay;\n                    \n                    // Update pay display\n                    const payDisplay = document.querySelector(`[data-pay=\"${day}\"][data-week=\"${week}\"]`);\n                    if (payDisplay) {\n                        payDisplay.textContent = `$${dayResult.pay.toFixed(2)}`;\n                    }\n                });\n                \n                // Update totals\n                document.getElementById('total-hours').textContent = totalHours.toFixed(1);\n                document.getElementById('total-hours-paid').textContent = totalHoursPaid.toFixed(1);\n                document.getElementById('total-pay').textContent = `$${totalPay.toFixed(2)}`;\n                document.getElementById('total-shifts').textContent = totalShifts;\n            }\n            \n            // Add event listeners to all inputs\n            hourInputs.forEach(input => {\n                input.addEventListener('input', calculatePay);\n                input.addEventListener('change', calculatePay);\n                \n                // Add an explicit blur event for mobile devices\n                input.addEventListener('blur', calculatePay);\n            });\n            \n            holidayCheckboxes.forEach(checkbox => {\n                checkbox.addEventListener('change', calculatePay);\n            });\n            \n            // Force an initial calculation\n            calculatePay();\n            \n            // Also recalculate on window load to ensure everything is properly initialized\n            window.addEventListener('load', calculatePay);\n        });", "new_str": "    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            // Default rates \n            let weekdayRate = 12.84;\n            let weekendRate = 15.41;\n            const WEEKEND_DAYS = ['SATURDAY', 'SUNDAY'];\n            \n            // Get all elements\n            const hourInputs = document.querySelectorAll('input[type=\"number\"][data-day]');\n            const holidayCheckboxes = document.querySelectorAll('input[type=\"checkbox\"][data-holiday]');\n            const weekdayRateInput = document.getElementById('weekday-rate');\n            const weekendRateInput = document.getElementById('weekend-rate');\n            const weeklyRadioBtn = document.querySelector('input[name=\"pay-period\"][value=\"weekly\"]');\n            const biweeklyRadioBtn = document.querySelector('input[name=\"pay-period\"][value=\"biweekly\"]');\n            const week2Container = document.querySelector('div:has(h2:contains(\"Week 2\"))');\n            \n            // Initialize the UI\n            updateWeekVisibility();\n            updateRateSummary();\n            \n            // Calculate pay for a specific day\n            function calculateDayPay(hours, isHoliday, day) {\n                if (!hours || hours <= 0) return { hoursPaid: 0, pay: 0 };\n                \n                // Calculate hours paid (subtract 0.5 for shifts > 5 hours)\n                const hoursPaid = hours > 5 ? hours - 0.5 : hours;\n                \n                // Determine base rate based on day\n                const rate = WEEKEND_DAYS.includes(day) ? weekendRate : weekdayRate;\n                \n                // Calculate pay (double rate for holidays)\n                const pay = isHoliday ? hoursPaid * rate * 2 : hoursPaid * rate;\n                \n                return {\n                    hoursPaid,\n                    pay\n                };\n            }\n            \n            // Update rates from input fields\n            function updateRates() {\n                weekdayRate = parseFloat(weekdayRateInput.value) || 12.84;\n                weekendRate = parseFloat(weekendRateInput.value) || 15.41;\n                updateRateSummary();\n                calculatePay();\n            }\n            \n            // Update rate summary in the summary section\n            function updateRateSummary() {\n                document.getElementById('summary-weekday-rate').textContent = `$${weekdayRate.toFixed(2)}`;\n                document.getElementById('summary-weekend-rate').textContent = `$${weekendRate.toFixed(2)}`;\n            }\n            \n            // Show/hide week 2 based on pay period selection\n            function updateWeekVisibility() {\n                const isWeekly = weeklyRadioBtn.checked;\n                const week2Elements = document.querySelectorAll('[data-week=\"2\"]');\n                \n                if (isWeekly) {\n                    // Hide Week 2 container\n                    const week2Col = document.querySelector('.grid-cols-1.md\\\\:grid-cols-2.gap-6').children[1];\n                    if (week2Col) {\n                        week2Col.style.display = 'none';\n                    }\n                    \n                    // Reset week 2 inputs to avoid them counting in weekly mode\n                    week2Elements.forEach(el => {\n                        if (el.tagName === 'INPUT' && el.type === 'number') {\n                            el.value = '';\n                        }\n                        if (el.tagName === 'INPUT' && el.type === 'checkbox') {\n                            el.checked = false;\n                        }\n                    });\n                } else {\n                    // Show Week 2 container\n                    const week2Col = document.querySelector('.grid-cols-1.md\\\\:grid-cols-2.gap-6').children[1];\n                    if (week2Col) {\n                        week2Col.style.display = '';\n                    }\n                }\n                \n                calculatePay();\n            }\n            \n            // Calculate all pay values\n            function calculatePay() {\n                console.log(\"Calculating pay...\");\n                \n                let totalHours = 0;\n                let totalHoursPaid = 0;\n                let totalPay = 0;\n                let totalShifts = 0;\n                \n                // Loop through all hour inputs\n                hourInputs.forEach(input => {\n                    // Skip week 2 if in weekly mode\n                    if (weeklyRadioBtn.checked && input.dataset.week === \"2\") return;\n                    \n                    const day = input.dataset.day;\n                    const week = input.dataset.week;\n                    const hours = parseFloat(input.value) || 0;\n                    \n                    if (hours > 0) {\n                        totalShifts++;\n                        totalHours += hours;\n                    }\n                    \n                    // Find corresponding holiday checkbox\n                    const holidayCheckbox = document.querySelector(`input[data-holiday=\"${day}\"][data-week=\"${week}\"]`);\n                    const isHoliday = holidayCheckbox ? holidayCheckbox.checked : false;\n                    \n                    // Calculate pay for this day\n                    const dayResult = calculateDayPay(hours, isHoliday, day);\n                    \n                    if (hours > 0) {\n                        totalHoursPaid += dayResult.hoursPaid;\n                    }\n                    totalPay += dayResult.pay;\n                    \n                    // Update pay display\n                    const payDisplay = document.querySelector(`[data-pay=\"${day}\"][data-week=\"${week}\"]`);\n                    if (payDisplay) {\n                        payDisplay.textContent = `$${dayResult.pay.toFixed(2)}`;\n                    }\n                });\n                \n                // Update totals\n                document.getElementById('total-hours').textContent = totalHours.toFixed(1);\n                document.getElementById('total-hours-paid').textContent = totalHoursPaid.toFixed(1);\n                document.getElementById('total-pay').textContent = `$${totalPay.toFixed(2)}`;\n                document.getElementById('total-shifts').textContent = totalShifts;\n            }\n            \n            // Add event listeners to inputs\n            hourInputs.forEach(input => {\n                input.addEventListener('input', calculatePay);\n                input.addEventListener('change', calculatePay);\n                input.addEventListener('blur', calculatePay);\n            });\n            \n            holidayCheckboxes.forEach(checkbox => {\n                checkbox.addEventListener('change', calculatePay);\n            });\n            \n            // Add event listeners to settings fields\n            weekdayRateInput.addEventListener('input', updateRates);\n            weekdayRateInput.addEventListener('change', updateRates);\n            weekdayRateInput.addEventListener('blur', updateRates);\n            \n            weekendRateInput.addEventListener('input', updateRates);\n            weekendRateInput.addEventListener('change', updateRates);\n            weekendRateInput.addEventListener('blur', updateRates);\n            \n            // Add event listeners to pay period radio buttons\n            weeklyRadioBtn.addEventListener('change', updateWeekVisibility);\n            biweeklyRadioBtn.addEventListener('change', updateWeekVisibility);\n            \n            // Force an initial calculation\n            calculatePay();\n            \n            // Also recalculate on window load to ensure everything is properly initialized\n            window.addEventListener('load', function() {\n                updateWeekVisibility();\n                updateRateSummary();\n                calculatePay();\n            });\n        });", "new_code_block_id": "payCalculatorComplete"}
